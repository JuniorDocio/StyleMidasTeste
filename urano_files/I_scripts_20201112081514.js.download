 "use strict";


 $(document).ready(function(){
/**
 * Created by marcelo.junior on 19/11/2015.
 */
var tipoNegocio;
var _isMobile = (function() {
    var check = false;
    (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
    return check;
})();


/*
 * Faz um fixed sidebar depependendo do elemento e da base informada
 * $el: O objeto que será movido
 * $base: O container de referencia para o elemento se mover.
 * O $el utilizará as dimensões e posições de base para se posicionar e correr corretamente pela tela.
 */
function __moveSidebar($el, $base)
{
    if($el.length){
        var wait = false;
        $(window).scroll(function(e){
            var windowPosition  = $(window).scrollTop();
            var elementHeight   = $el.height();
            var elementTop      = $el.offset().top;
            var elementBottom   = $el.offset().top + elementHeight;
            var defaultTop      = $base.offset().top;
            var defaultBottom   = $base.offset().top + $base.height();

            if(windowPosition > defaultTop && windowPosition < (defaultBottom - elementHeight)) {
                $el.attr('style','position: fixed; top: 10px;'); wait = false;
            } else if (defaultBottom <= elementBottom && !wait){
                $el.attr('style', 'position: absolute; top: ' + (elementTop-elementHeight-60) + 'px;'); wait = true;
            }

            $el.css({ width: $el.parent().width() + 'px' });
        }).trigger('window');
    }
}

$('.multiple-select').multiselect({
    maxHeight: 400,
    enableClickableOptGroups: true,
    filterPlaceholder: 'Encontre mais rápido o que procura...',
    enableCollapsibleOptGroups: true,
    includeSelectAllOption: false,
    buttonText: function(options, select) {
        return (options.length === 0) ? select.attr('placeholder') : options.length + ' selecionados!';
    },
    onChange:function(option, checked){
        var select = option.parents('select').first();

        if(select.data('function') != undefined){
            if(select.data('function') == 'qtdResultadoBuscaLivre1')
                qtdResultadoBuscaLivre1();
        }
    }
});

$('.multiple-select-with-search').multiselect({
    maxHeight: 400,
    enableFiltering: true,
    filterPlaceholder: 'Encontre mais rápido o que procura...',
    enableCollapsibleOptGroups: true,
    includeSelectAllOption: false,
    enableCaseInsensitiveFiltering: true,
    buttonText: function(options, select) {
        return (options.length === 0) ? select.attr('placeholder') : options.length + ' selecionados!';
    }
});

$(document).delegate('*[data-toggle="lightbox"]', 'click', function(event) {
    event.preventDefault();
    $(this).ekkoLightbox({
        loadingMessage: 'Carregando...',
        onContentLoaded: function() {
            var imgh = $(".ekko-lightbox-container").find("img").height();

            var winh = $(window).height();
            if( (imgh + 200) > winh ){
                $(".ekko-lightbox-container").find("img").css("height",winh-150).css("width","auto").css("margin","0 auto");
                var imgw = $(".ekko-lightbox-container").find("img").width();
                $(".modal-dialog").css("width", imgw + 30);
            }

        }
    });
});

/**
 * Created by marcelo.junior on 07/12/2015.
 */
$('.dicionario-lista-not-found').addClass('hidden');

$('.dicionario-letras').click(function(){
    var search = $(this).data('search').toLowerCase();

    if(search == 'all'){
        $(".dicionario-lista li").removeClass('hidden');
        $('.dicionario-lista-not-found').addClass('hidden');
    }else{
        search = ($('.dicionario-lista-' + search).length) ? search : 'not-found';
        $('.dicionario-lista-' + search).removeClass('hidden');
        $('.dicionario-ordenacao').not('.dicionario-lista-' + search).addClass('hidden');
    }

    $('.dicionario-letras').css('background','#FFF');
    $(this).css('background', '#CCC');
});

$('.dicionario-search').keyup(function(){
    var texto = $(this).val();
    $(".dicionario-lista").find('li').removeClass('hidden');

    var contaNotfound = 0;

    $(".dicionario-lista > li").each(function(){
        var conta = 0;

        $(this).children('ul').children('li').each(function() {
            if ($(this).text().toUpperCase().indexOf(texto.toUpperCase()) < 0){
                $(this).addClass('hidden');
            }else{
                $(this).removeClass('hidden');
                conta++;
            }
        });

        if(conta == 0)
            $(this).addClass('hidden');
        else
            $(this).removeClass('hidden');

        contaNotfound += conta;
    });

    if(contaNotfound == 0)
        $('.dicionario-lista-not-found').removeClass('hidden');
    else
        $('.dicionario-lista-not-found').addClass('hidden');
});

$('input[type=checkbox].chk-atendido-por-corretor').click(function(){

    $('input.input-nome-corretor').val("");

    if($(this).prop('checked')){
        $('input.input-nome-corretor').parent('div').removeClass('hidden');
    }else{
        $('input.input-nome-corretor').parent('div').addClass('hidden');
    }

});

function switchClass(element, class1, class2) {
    if ( element.hasClass(class1) ) {
        element.removeClass(class1);
        element.addClass(class2);
    } else {
        element.removeClass(class2);
        element.addClass(class1);
    }
}

(function(){
    var mapas = document.getElementsByClassName('mapa-google-maps');
    try {
        if (mapas.length > 0)
            google.maps.event.addDomListener(window, 'load', initializeGoogleMaps);
    } catch(err) {
        console.error('Ocorreu um erro ao carregar Google Maps');
        console.error(err.message);
    }

    function carregaMapa(mapa) {
        var data = mapa.dataset;

        try {
            if(data.resize != undefined && data.resize == 1){
                var height = mapa.parentElement.clientHeight < 550 ? 550 : mapa.parentElement.clientHeight;
                mapa.style.height = height + "px";
            }
        } catch(err) {}


        var myCenter = new google.maps.LatLng(data.lat, data.lng);

        var map = new google.maps.Map(mapa, {
            center: myCenter,
            zoom: Number(data.zoom),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        if(data.markers == undefined) {
            new google.maps.Marker({
                position: myCenter,
                animation: google.maps.Animation.DROP,
                map: map
            });
        }else{
            try{
                var markers = JSON.parse(data.markers);

                if(markers.length > 0 && typeof markers == 'object'){
                    var bounds     = new google.maps.LatLngBounds();

                    [].forEach.call(markers, function (marker){
                        if(marker.lat != undefined && marker.lng != undefined){
                            var markerIn = new google.maps.Marker({
                                position: new google.maps.LatLng(marker.lat, marker.lng),
                                animation: google.maps.Animation.DROP,
                                map: map
                            });

                            bounds.extend(markerIn.position);
                        }
                    });

                    if(data.zoom || true)
                        map.fitBounds(bounds);
                    map.setCenter(bounds.getCenter());
                }
            }catch(err){}
        }

        try {
            if (/*data.zoom || false*/ markers != undefined && markers.length == 1){
                //ap.zoom = Number(data.zoom);
                //console.log("Acertou Zoom: " + data.zoom);
                var listener = google.maps.event.addListener(map, "idle", function() {
                    map.setZoom(Number(data.zoom));
                    google.maps.event.removeListener(listener);
                });
            }
        } catch(err) {
            console.log(err);
        }
    }

    function initializeGoogleMaps() {
        [].forEach.call(mapas, function(mapa){
            if($(mapa).hasClass('mapa-oculto')){
                $(mapa).on('click', function() {
                    $(mapa).unbind('click');
                    $(this).removeClass('mapa-oculto');
                    $(this).parent().removeClass('mapa-oculto');
                    carregaMapa(mapa)

                });
            } else {
                carregaMapa(mapa);
            }
        });
    }
})();

$(window).scroll(function () {
    if($(".barra-flutuante").length != 0) {
        if($(window).scrollTop() > $(".barra-flutuante").height()) {
            $(".barra-flutuante").addClass('opened');
        } else {
            $(".barra-flutuante").removeClass('opened');
        }
        $("#top-bar").addClass('tem-barra-flutuante');
    }
});

$(document).ready(function(){

    $('.multiple-select').multiselect('rebuild');

    $('.carousel').carousel({
        interval: 7000,
        pause: 'true'
    });

    function lazy(item)
    {
        if( $( item ).attr('lazy-src') ) {
            console.log('src: ' + $(item).attr('lazy-src'));
            $(item).attr('src', $(item).attr('lazy-src')).removeAttr('lazy-src').attr('lazied', 'lazied-src');
            try { $(item).parents('video').load(); } catch (err) { console.log(err); }
        }

        if( $( item ).attr('lazy-style') ) {
            console.log('style: ' + $(item).attr('lazy-style'));
            $(item).attr('style', $(item).attr('lazy-style')).removeAttr('lazy-style').attr('lazied', 'lazied-style');
        }
    }

    $(".carousel").each(function(){
        var carousel = $(this);

        $( carousel ).find('[lazy-src]').each(function(){
            var item = $(this);
            lazy(item);
        });

        $( carousel ).find('[lazy-style]').each(function(){
            var item = $(this);
            lazy(item);
        });

        try {
            console.log('play: ' + $(carousel).attr('id') );
            $(carousel).carousel('play');
        } catch (err){ /*console.log(err);*/ }

    });

    function AtivarMenuMobile(item) {
        /* Precisei colocar o MENU no final do codigo pra ele ficar sobre todos os elementos
           O z-index não estava resolvendo.
        */
        var navBarMobile = $(item).clone();
        var divNavBar = document.createElement('div');
        $(divNavBar).attr('class', $(item).parent().attr('class'));
        $(divNavBar).append(navBarMobile).removeClass('row').addClass('row-mob');
        $(".absolute-navbar").remove();
        $("body").append(divNavBar);
        $("[toggle-menu-sidebar]").on('click', function () {
            var target = $(this).data('toggle-menu-target');
            $(target).toggleClass('open');
        });
    };
    AtivarMenuMobile(".absolute-navbar");

    $(".abrir-filtro, .mais-filtros").on('click', function (e) {
        e.preventDefault();
        var rsf = $(this).closest('main').find('.resultados-filtros');
        if(rsf.length === 0){
            rsf = $(this).closest('.resultados-filtros');
        }

        rsf
            .toggleClass('hidden-sm')
            .toggleClass('hidden-xs')
            .toggleClass('resultados-filtros-fullscreen');
        $('footer').toggleClass('hidden');
        $('body')
            .toggleClass('overflow-hidden');
    });
});

$('.action-scroll-to').on('click', function(){
    var target = $(this).data('target');
    if(target != undefined){
        $('html,body').animate({
            scrollTop: $(target).offset().top
        }, 1000);
    }
    setTimeout(function(){
        $('#top-bar').removeClass('barra-ativa')
    }, 1200);
});

function getQueryByName(name, query)
{
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");

    var regex = new RegExp("[\\?&]?" + name + "=([^&#]*)"),
        results = regex.exec(query);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}
/*
$(document).ready(function() {
    $('.filtro-scroll').jScrollPane();
});*/

(function(){
    if($(".footer .middle-row.footer-linha[class*='flutuante-fixa-rodape_']").length != 0){
        var linhaAlvo       = $(".footer .middle-row.footer-linha[class*='flutuante-fixa-rodape_']").eq(0);

        var elementoAncora  = $(".footer .top-row").eq(0);
        console.log([linhaAlvo,elementoAncora]);

        linhaAlvo.addClass('linha-fixa-flutuante');

        $(window).scroll(function() {
            var linhaAlvoAltura       = linhaAlvo.outerHeight(true);
            var linhaAlvoBottom       = linhaAlvo.offset().top + linhaAlvo.outerHeight(true);
            var alturaJanela          = ($(window).scrollTop()) + ($(window).height());
            var elementoAncoraBottom  = elementoAncora.offset().top + elementoAncora.outerHeight(true);

            linhaAlvo.addClass('linha-fixa-flutuante');

            if( alturaJanela < elementoAncoraBottom +  linhaAlvoAltura && $(window).width() > 767 ) {

                linhaAlvo.addClass('linha-fixa-flutuante');

            }else {

                linhaAlvo.removeClass('linha-fixa-flutuante');

            }
        });
    }
})();
$(".info-imobiliaria-telefone .item-telefone img.icone").css('cursor','pointer');
$(".info-imobiliaria-telefone .item-telefone img.icone").on('click', function(){
    var url = $(this).parent().find('a:first').attr('href');
    if(url.length > 5) window.open(url, '_blank');
    return;
});

function carregaMascarasInput() {
    $('.input-mask').each(function(){
        var mask = $(this).data('mask');
        var isNumeric = $(this).data('is-numeric') || 0;

        if(mask != undefined){
            if(isNumeric == 1){
                $(this).inputmask({alias:'decimal', autoGroup:true, groupSeparator: '.', radixPoint:',', prefix:""});
            } else {
                $(this).inputmask({mask:mask, greedy: false});
            }
        }
    });
}

carregaMascarasInput();
$(document).ready(function(){
  /*
  var linhaAlvo       = $(".footer .middle-row.footer-linha").eq(0);
  var elementoAncora  = $(".footer .top-row").eq(0);

  linhaAlvo.addClass('linha-fixa-flutuante');
  
  $(window).scroll(function() {
    var linhaAlvoAltura       = linhaAlvo.outerHeight(true);
    var linhaAlvoBottom       = linhaAlvo.offset().top + linhaAlvo.outerHeight(true);
    var alturaJanela          = ($(window).scrollTop()) + ($(window).height());
    var elementoAncoraBottom  = elementoAncora.offset().top + elementoAncora.outerHeight(true);

    linhaAlvo.addClass('linha-fixa-flutuante');

    if( alturaJanela < elementoAncoraBottom +  linhaAlvoAltura && $(window).width() > 767 ) {
      
      linhaAlvo.addClass('linha-fixa-flutuante');

    }else {

      linhaAlvo.removeClass('linha-fixa-flutuante');

    }

  });
*/

var contador = 1;

$('#header .carousel.slide').on('slid.bs.carousel', function () {

  
  var IndiceAtivo = $(this).find('li.active').attr('data-slide-to');

  $(this).find('.item')
    .eq(IndiceAtivo)
    .find('.carousel-indicators li')
    .eq(IndiceAtivo)
    .addClass('active');

})


});
$.widget( "custom.catcomplete", $.ui.autocomplete, {
    _create: function() {
        this._super();
        this.widget().menu( "option", "items", "> :not(.ui-autocomplete-category)" );
    },
    _renderMenu: function( ul, items ) {
        var that = this,
            currentCategory = "";
        $.each( items, function( index, item ) {
            var li;
            if ( item.category != currentCategory ) {
                ul.append( "<li class='ui-autocomplete-category'>" + item.category + "</li>" );
                currentCategory = item.category;
            }
            li = that._renderItemData( ul, item );
            if ( item.category ) {
                li.attr( "aria-label", item.category + " : " + item.label );
            }
        });
    },
});

function getOptionsTipoNegocio(arg){
    switch (arg){
        case 'VL': return 'lancamento';
        case 'AA': return 'aluguel';
        case 'AT': return 'temporada';
        default  : return 'venda';
    }
}

var $_cacheTransacaoBuscaCompleta = {};

$('.busca-avancada').find('.btn-transacao').on('click', function(){
    var transacao = $(this).data('transacao');

    var divDataTipoNegocio =  $(this).parent('div.transacao-group').next('.clear').children(transacao == 'V' ? '.seletor-venda' : '.seletor-aluguel');

    _preparaDadosBuscaCompleta(divDataTipoNegocio, transacao);
});

$('.busca-avancada').find('.btn-transacao').parent('div.transacao-group').next('.clear').find('input').on('change', function() {

    var obj       = null;
    var transacao = 'V';

    if($(this).parents('.seletor-aluguel').length > 0) {
        obj = $(this).parents('.seletor-aluguel').first();
        transacao = 'A';
    } else {
        obj = $(this).parents('.seletor-venda').first();
    }

    _preparaDadosBuscaCompleta(obj, transacao);
});

$('#busca-detalhada label.btn').on('click', function () {
    $(this).closest('label').toggleClass('active');
});

function _preparaDadosBuscaCompleta(divDataTipoNegocio, transacao, escopo)
{
    var url       = '/busca/busca-avancada/atualiza-dados';

    var checked = divDataTipoNegocio.find('input:checked');
    var hidden  = divDataTipoNegocio.find('input[type=hidden]');

    if(hidden.length == 1) {
        if(checked.length == 1) {
            transacao = checked.val();
        }
    } else {
        transacao = hidden.not("[name=tipoNegocio]").first().val();
    }

    escopo = escopo || null;

    if(transacao in $_cacheTransacaoBuscaCompleta){
        _atualizaDadosBuscaCompleta($_cacheTransacaoBuscaCompleta[transacao], escopo);
    }else{
        $.ajax({
            method:'GET',
            url:url + '?transacao=' + transacao
        }).done(function(data){
            $_cacheTransacaoBuscaCompleta[transacao] = data;
            _atualizaDadosBuscaCompleta(data, escopo);
        });
    }
}


function _atualizaDadosBuscaCompleta(data, escopo){

    escopo = escopo || $('.busca-avancada').first();

    var tipoImovel         = escopo.find('.atualiza-tipoImovel').first();
    var campoValorMax      = escopo.find('.atualiza-valor-max').first();
    var selectEstadoCidade = escopo.find('.selectEstadoCidade').first();

    tipoImovel.find('optgroup').remove();
    selectEstadoCidade.find('option').remove();

    var html      = '';
    var vAtual    = null;
    var vAnterior = null;

    if(data.tipoImovel != undefined && data.tipoImovel.empty == undefined){
        $.each(data.tipoImovel, function( k ,v ) {
            vAtual = k.split('-')[0];
            if(vAnterior !=  null && vAnterior != vAtual)
                html += '</optgroup>';
            if(vAnterior == null || vAnterior != vAtual)
                html += '<optgroup label="' + v.trim() + '">';

            html += '<option value="' + k + '">' + v.trim() + '</option>';
            vAnterior = vAtual;
        });
    }

    tipoImovel.append(html).multiselect('rebuild');


    if(data.sllocalidade != undefined && data.sllocalidade.empty == undefined){
        $.each(data.sllocalidade, function( k ,v ){
            selectEstadoCidade.append('<option value="' + k + '">' + v + '</option>');
        });
    }


    selectEstadoCidade.val(selectEstadoCidade.data('value'));

    if(data.valorImovel != undefined && data.valorImovel.empty == undefined) {
        var nextSlider = campoValorMax.next('.sliders');
        if(nextSlider.length > 0){
            nextSlider.attr('data-valor-maximo', data.valorImovel);
            _buildNoUiSlider(nextSlider[0], true);
        }
    }

    $('select.selectEstadoCidade').trigger('change');
}

function _buildNoUiSlider(slider, rebuild){
    var nomeCampo = slider.dataset.campo;

    rebuild = rebuild == undefined ? false : rebuild;

    var minValor     = Math.ceil(slider.dataset.valorMinimo);
    var maxValor     = Math.ceil(slider.dataset.valorMaximo);
    var initMaxValor = Math.ceil(slider.dataset.valorInicial);
    var decimals     = slider.dataset.type == 'int' ? 0 : 2;

    var marginMin = document.getElementsByClassName('input-' + nomeCampo + '-min')[0];
    var marginMax = document.getElementsByClassName('input-' + nomeCampo + '-max')[0];

    var inputChanged = false;

    var formato   = wNumb({
        decimals: decimals,
        mark: ',',
        thousand:'.'
    });

    initMaxValor = initMaxValor == undefined || isNaN(initMaxValor) ? maxValor : initMaxValor;

    if(rebuild){
        slider.noUiSlider.updateOptions({
            start: [minValor, initMaxValor],
            connect: true,
            range: {
                'min' : minValor,
                'max' : maxValor
            },
            format: formato
        });
    }else{
        noUiSlider.create(slider, {
            start: [minValor, initMaxValor],
            connect: true,
            range: {
                'min' : minValor,
                'max' : maxValor
            },
            format: formato
        });
    }

    slider.noUiSlider.on('update', function ( values, handle ){

        var valorFormatado = formato.from(values[handle]);

        if ( handle ) {
            if(inputChanged){
                marginMax.value = (valorFormatado > maxValor || valorFormatado < 0) ? maxValor : values[handle];
                inputChanged    = false;
            }else{
                marginMax.value = formato.to(valorFormatado, maxValor, decimals);
            }
        } else {
            if(inputChanged){
                marginMin.value = (valorFormatado > maxValor || valorFormatado < 0) ? minValor : values[handle];
                inputChanged = false;
            }else{
                marginMin.value = formato.to(valorFormatado, maxValor, decimals);
            }
        }
    });

    marginMin.addEventListener('change', function(){
        inputChanged = true;
        slider.noUiSlider.set([this.value, null]);
    });

    marginMin.addEventListener('click', function(){
        if(this.value != ''){
            this.setAttribute('valor-anterior',this.value);
            this.value = '';
        }else if(this.getAttribute('valor-anterior') == ''){
            this.setAttribute('valor-anterior', minValor);
        }
    });

    marginMin.addEventListener('blur', function(){
        if(this.value == '')
            this.value = this.getAttribute('valor-anterior');
    });

    marginMax.addEventListener('change', function(){
        inputChanged = true;
        slider.noUiSlider.set([null, this.value]);
    });

    marginMax.addEventListener('click', function(){
        if(this.value != '') {
            this.setAttribute('valor-anterior', this.value);
            this.value = '';
        }else if(this.getAttribute('valor-anterior') == ''){
            this.setAttribute('valor-anterior', maxValor);
        }
    });

    marginMax.addEventListener('blur', function(){
        if(this.value == '')
            this.value = this.getAttribute('valor-anterior');
    });

    if(rebuild){
        marginMax.value = formato.to(maxValor);
    }
}

$('div.busca-submit-tratado, div.busca-avancada').find('form').on('submit', function(e){

    //console.log('submeteu'); akiaki
    //Tratamento Busca livre
    if ($(this).attr('id') == 'form-busca-livre-3') {

        qtdeVezesClienteTentouBuscarComLocalidadeInexistentePorMaisDeUmaVez++;
        //console.log('Busca livre:' + qtdeVezesClienteTentouBuscarComLocalidadeInexistentePorMaisDeUmaVez);
        if (qtdeVezesClienteTentouBuscarComLocalidadeInexistentePorMaisDeUmaVez > 1) {
            $('#info-resultado-busca-livre-3 div').css({background: '#f00', padding: '5px', display: 'inline-block'});
        }

        if ($('#busca-livre-search').val() != '' && emptyBuscaLivreAutoComplete) {
            //console.log('Entrou');
            if (!carregandoLista) {
                var aviso = '<div><i class="glyphicon glyphicon-alert"></i>&nbsp;&nbsp;<span>Não encontramos imóveis para essa localidade</span></div>';

                if ($("#busca-livre-search").val().length < 3) {
                    var aviso = 'Informe pelo menos 3 letras da localidade procurada';
                }
                $(this)
                    .find('div.imoveis-encontrados')
                    .first()
                    .removeClass('hidden')
                    .html(aviso);
            }
            return false;
        }
    }

    //Tratamento busca por código
    if ($(this).attr('id') == 'form-busca-codigo-1') {
        qtdeVezesClienteTentouBuscarComCodigoInexistentePorMaisDeUmaVez++;
        //console.log('Busca por código');
        if (qtdeVezesClienteTentouBuscarComCodigoInexistentePorMaisDeUmaVez > 1) {
            $('#busca-por-codigo .imoveis-encontrados').css({background: '#f00', padding: '5px', display: 'inline-block'});
        }


        if (emptyBuscaCodigoAutoComplete || $("#busca-codigo-search").val() == '') {
            var aviso = '<div><i class="glyphicon glyphicon-alert"></i>&nbsp;&nbsp;<span>Não encontramos nenhum imóvel com esse código</span></div>';
            //if ($("#busca-codigo-search").val().length < 3) 'Informe pelo menos 3 letras do código procurado';
            if ($("#busca-codigo-search").val() == '') aviso = 'Informe o código do imóvel';
            if (!carregandoListaCodigo) {
                $('#busca-por-codigo .imoveis-encontrados')
                    .removeClass('hidden')
                    .html(aviso);
            }
            return false;
        }
    }



    if(typeof geraActionPersonalizadaBuscaLivre1 == 'function'){
        try{
            //var formId = ($(this).attr('id') == 'form-busca-livre-3') ? 'form-busca-livre-3' : 'form-busca-detalhada-3';
            var formId = 'form-busca-livre-3';
            geraActionPersonalizadaBuscaLivre1(formId);
        }catch(err){}
    }
    //return false; //akiaki

    var dados   = $(this).serializeArray();
    var retorna = false;

    //console.log(dados);
    //return false;

    $.each(dados, function(k,v){
        if(v.name == 'codigo' || v.name == 'codigoEmp'){
            if(v.value.length > 0) retorna = true;
            return false;
        }
    });

    if(retorna) return true;

    if(e.isTrigger == undefined){
        //$(this).find('input[name=q]').prop('disabled', true);
        $(this).trigger('submit');
        return false;
    }

    e.preventDefault();

    var querystring = [];
    $.each(dados, function(k, v){
         if(v.name.indexOf('[]'))
             querystring[querystring.length] = v.name.replace('[]', '[' + v.value + ']') + '=' + v.value;
         else
             querystring[querystring.length] = v.name + '=' + v.value;

    });


    /*console.log($(this).attr('action') + '/#/?' + querystring.join('&'));
    return false;*/
    location.href = $(this).attr('action') + '/#/?' + querystring.join('&');
    var btnFind = $(".btn-site:visible").eq(0);
    //$(btnFind).hide();
    $(btnFind).prop('disabled', true);
    if($(this).data('pagina-rota') == 'site.resultado.busca.slug'){
        setTimeout(function() {
            location.reload();
        },2000);
    }
    setTimeout(function() {
        //$(btnFind).show();
        $(btnFind).prop('disabled', false);
    }, 10000);
});

$('select.selectEstadoCidade').on('change', function(){

    var form = $(this).parents('form').first();

    $.get('/busca/busca-avancada/atualiza-bairros/',form.serialize() , function(response){
        response = JSON.parse(response);
        
        if(response.sucesso){
            var select = $('select.atualiza-bairros');
            select.find('option').remove();
            $.each(response.data, function(k, v){ select.append('<option value="' + v.bairroId + '">' + $.trim(v.nome) + '</option>'); });
            select.multiselect('rebuild');
        }
    }) ;
});

$(document).ready(function(){

    /*var listener = function(event){
        console.log('Evento:' + event);
    };*/
    
    $('#busca-livre-search').unbind('click', function(event){
        //console.log('Evento:' + event);
    });
    //document.getElementById('busca-livre-search').removeEventListener('click', listener, false);

    $('select.selectEstadoCidade').trigger('change');

    $("button.multiselect").on('click', function() {
        $(".atualiza-bairros").multiselect('rebuild');
    });

    /*
     MOBILE
     */

    $('#esconde-busca-mobile').click(function(){
        $('.busca-widget').slideDown();
        $(this).slideUp();
    });

    /*Alterando o z-index da busca para alguns casos no celular
    * 1- O tipo de imóvel ficar por cima da barra de filiais
    * 2 - Quando clica para digitar o código bairro ou outr informação, a busca ficar por cima da barra de filiais
    * */
    $(document)
        .on('click', "#tipoImovelLivre, #tipoImovelDetalhadada", function() {
            $('.linha-busca,.busca-widget').attr('style','z-index:999999 !important');
        })
        .on('click', '#modalTipoImovelBuscaAvancada button.close,#modalTipoImovelBuscaLivre button.close', function() {
            $('.linha-busca,.busca-widget').attr('style','z-index:999 !important');
        })
        .on('focus', "#busca-livre-search, #busca-codigo-search, #busca-condominio-search", function() {
            $('.linha-busca,.busca-widget').attr('style','z-index:999999 !important');
        })
        .on('focusout', "#busca-livre-search, #busca-codigo-search, #busca-condominio-search", function() {
            $('.linha-busca,.busca-widget').attr('style','z-index:999 !important');
        });

    /*INTERAÇÃO DAS "ABAS" NO MOBILE*/
    //$('div.dropdown-menu a').on('click',function(){
    $('div.widget-busca-3 div.dropdown-menu a.dropdown-item').on('click',function(){
        $('div.dropdown-menu a').removeClass('active');
        var busca_selecionada = $(this).html();

        $('a.dropdown-toggle').html(busca_selecionada + '<div class="seta"> <span class="glyphicon glyphicon-triangle-bottom"></span></div>');
        $(this).addClass('active');
    });
    $('div.dropdown-menu a.active').triggerHandler('click');

    $('#busca-livre-search,#busca-codigo-search,#busca-condominio-search,.tipo-imovel-container button').click(function(){

        /*Função de scroll caso os resultados da busca não apareça na tela para o cliente.
         *
         * Caso a tela do cliente seja pequena ou exista algum modelo que a busca fique muito abaixo na tela,
         * as sugestões de busca livre não aparecem na tela.
         * Portanto, é feito um calculo para saber a distância do final da barra da busca com a Janela.
         * Caso o final da busca esteja em uma distância menor do que 300 do final da tela, é feito scrol suficiente
         * para que os 300 pixels sejam respeitados
         *
         * Escolhi 400 px porque é o tamanho máximo do select de Tipo de Imóvel
         *
         * Desenvolvido por Rodrigo Costa - 07/03/2017
        */
        var busca                           = $('.busca-widget');


        var bottomJanela                    = parseInt($(window).scrollTop()) + parseInt($(window).height());
        var posicaoTopoBusca                = busca.offset().top;
        var alturaBusca                     = parseInt(busca.height());
        var alturaAutoComplete              = 300;

        var posicaoBottomBusca              = posicaoTopoBusca + alturaBusca;
        var margemEntreFinalDaBuscaEJanela  = bottomJanela - posicaoBottomBusca;

        if (margemEntreFinalDaBuscaEJanela < alturaAutoComplete){
            //if(_isMobile && $(this).attr('class').indexOf('multiselect') === -1){
            /*console.log(400 - margemEntreFinalDaBuscaEJanela);
            console.log((bottomJanela + alturaAutoComplete) - margemEntreFinalDaBuscaEJanela);
            console.log(posicaoBottomBusca);*/

            if(!_isMobile){
                $('html, body').animate({
                    scrollTop: (posicaoBottomBusca - 400) /*(400 - margemEntreFinalDaBuscaEJanela) CHAMADO #1200*/
                }, 1000);
            }

        }
    });
});
/**
 * Created by marcelo.junior on 19/11/2015.
 */

var ultimoTermoBuscaLivre1JS = '';

$('#form-busca-livre-3 .seletor-venda, #form-busca-livre-3  ').find('input:checkbox').on('change', function(){
    var btn = ['VA', 'VL', 'V'].indexOf($(this).val()) !== -1 ? '.btn-transacao[value="V"]' : '.btn-transacao[value="A"]' ;
    $('#form-busca-livre-3').find(btn).trigger('click');
});

$('#form-busca-livre-3').find('.btn-transacao').on('click', function( e ){
    //$('#busca-livre-search').val('');

    cacheBuscaLivre1 = {};

    $('#form-busca-livre-3').find('#busca-livre-tipo-imovel optgroup').remove();

    var tipoNegocio         = $(this).attr('value');
    var seletorInputChecked = tipoNegocio == 'V' ? '.seletor-venda' :'.seletor-aluguel';

    var inputChecked = $(this).parent().next().children(seletorInputChecked).find('input:checked');
    inputChecked.length == 1 ? tipoNegocio = inputChecked.val() : null;

    $('#form-busca-livre-3 input[type=hidden]:not(.hiddenTipoNegocio)').not('.hiddenTipoImovel').remove();
    $('#form-busca-livre-3 input[type=hidden].hiddenTipoNegocio').val(['VA', 'VL', 'V'].indexOf(tipoNegocio) != -1 ? 'V' : 'A');

    var options    = getBuscaLivreOptionsTipoImovel(tipoNegocio);

    var ultimoTipo = -1;
    var optgroup;
    if(options != undefined){
        $.each(options, function(k, v){
            var tipo = k.split('-')[0];

            if(tipo != ultimoTipo){
                optgroup = $('<optgroup>').attr({ label:v });
                optgroup.appendTo('#form-busca-livre-3 #busca-livre-tipo-imovel');
            }

            $('<option>').attr({
                value:k,
                label:v
            }).appendTo(optgroup);

            ultimoTipo = tipo;
        });
    }

    $('.multiple-select#busca-livre-tipo-imovel').multiselect('rebuild');
    $("#info-resultado-busca-livre-3").addClass('hidden').html("");
});

var emptyBuscaLivreAutoComplete = true;
var selectOptionBuscaLivre      = false;
var selecaoAutomaticaFocusOut   = false;
var carregandoLista             = false;

var qtdeVezesClienteTentouBuscarComLocalidadeInexistentePorMaisDeUmaVez = 0;

if(typeof(urlsBuscaLivre1) == 'function'){
    var cacheBuscaLivre1 = {};
    var cacheResultadoLivre1 = {};

    $("#busca-livre-search").catcomplete({
        autoFocus: true,
        delay: 300,
        minLength: 3,
        source:function (request, response ) {
            carregandoLista = true;
            $('div.busca-submit-tratado, div.busca-avancada')
                .find('form')
                .find('div.imoveis-encontrados')
                .first()
                .removeClass('hidden')
                .html('<img src="/geral/img/procurando.svg" />&nbsp;Pesquisando');

            var term = request.term;
            var url_auto_complete_busca = urlsBuscaLivre1().resultado;

            $('#form-busca-livre-3 input[type=hidden]:not(.hiddenTipoNegocio)').not('.hiddenTipoImovel').remove();

            if(term in cacheBuscaLivre1){
                if(term != '') {
                    response(cacheBuscaLivre1[term]);
                    dadosAutoCompleteBuscaLivre = cacheResultadoLivre1[term];
                    $.ui.autocomplete.filter = function (array) { return true };
                    if (cacheBuscaLivre1[term].length == 0){
                        $('div.busca-submit-tratado, div.busca-avancada')
                            .find('form')
                            .find('div.imoveis-encontrados')
                            .first()
                            .removeClass('hidden')
                            .html('<div><i class="glyphicon glyphicon-alert"></i>&nbsp;&nbsp;<span>Não encontramos imóveis para essa localidade</span></div>');
                    }else{
                        carregandoLista = false;
                        $("#info-resultado-busca-livre-3").addClass('hidden').html("");
                    }
                    return;
                }
            }
            
            $.ajax({
                type: "POST",
                data: $('#form-busca-livre-3').serialize(),
                url: url_auto_complete_busca,
                success: function(data){
                    console.log(data);
                    data                              = JSON.parse(data);
                    console.log(data);
                    dadosAutoCompleteBuscaLivre       = data;
                    cacheResultadoLivre1[term]        = dadosAutoCompleteBuscaLivre;

                    var i = 0;
                    var data_busca_livre = [];
                    var textoCondominioEmpreendimento = (tipoNegocio == "VL") ? 'Empreendimento' : 'Condominio' ;

                    $.each(data.Imovel, function (k, v) {                   data_busca_livre[i] = {label: k, category: 'Imóvel'};     i++; });
                    $.each(data.Cidade, function (k, v) {                   data_busca_livre[i] = {label: k, category: 'Cidade'};     i++; });
                    $.each(data.Bairro, function (k, v) {                   data_busca_livre[i] = {label: k, category: 'Localidade'}; i++; });
                    $.each(data.CondominioEmpreendimento, function (k, v) { data_busca_livre[i] = {label: k, category: data.Label.CondominioEmpreendimento, empty: false}; i++; });

                    cacheBuscaLivre1[term] = data_busca_livre;
                    response(data_busca_livre);
                    if (data_busca_livre.length == 0){
                        $('div.busca-submit-tratado, div.busca-avancada')
                            .find('form')
                            .find('div.imoveis-encontrados')
                            .first()
                            .removeClass('hidden')
                            .html('<div><i class="glyphicon glyphicon-alert"></i>&nbsp;&nbsp;<span>Não encontramos imóveis para essa localidade</span></div>');
                    }else{
                        carregandoLista = false;
                        $("#info-resultado-busca-livre-3").addClass('hidden').html("");
                    }
                }
            });
        },
        select: function (event, ui) {
            selectOptionBuscaLivre = true;

            if(ui.item.category != '' && ui.item.label != 'Nenhum imóvel encontrado'){

                emptyBuscaLivreAutoComplete = false;
                trataValoresBuscaLivre1(ui.item.label);
                //qtdResultadoBuscaLivre1();

                if (!selecaoAutomaticaFocusOut){
                    $('div#busca-livre').find('form').trigger('submit');
                }
                selecaoAutomaticaFocusOut = false
            }else{
                emptyBuscaLivreAutoComplete = true;
            }
            qtdResultadoBuscaLivre1();
        },
        search:function(event, ui) {
            emptyBuscaLivreAutoComplete = true;
            //$('#form-busca-livre-3').attr('data-disabled', 1);
        },
        close: function(event, ui) {

            var item_label = $('.ui-widget-content .ui-menu-item').first().html();
            if ($('#busca-livre-search').val() != '' && !selectOptionBuscaLivre){
                trataValoresBuscaLivre1(item_label);
            }
            selectOptionBuscaLivre = false;

        }

    }).click(function(){
        //$(this).trigger(jQuery.Event("keydown", { keyCode: 40 }));
        $(this).trigger("keydown");
    }).keyup(function(e){
        //console.log($(this).val().length);
        if(e.keyCode != 13) { //ENTER
            qtdeVezesClienteTentouBuscarComLocalidadeInexistentePorMaisDeUmaVez = 0;
            $('#info-resultado-busca-livre-3').css('background', 'transparent');
        }

        if($(this).val() == '') {
            $("#info-resultado-busca-livre-3").addClass('hidden').html("");
        }else if($(this).val().length < 3){
            $('#info-resultado-busca-livre-3').html('Informe pelo menos 3 letras da localidade procurada');
        }
    });
}
    $("#busca-livre .btn-site").click(function(){
        $("#busca-livre-search").trigger(jQuery.Event("keydown", { keyCode: 40 })); //SETA PARA BAIXO
        $("#busca-livre-search").trigger(jQuery.Event("keydown", { keyCode: 9 }));  //TAB
    });

function trataValoresBuscaLivre1(opcao)
{
    var resultado = function() {
            var retorno;

            $.each(dadosAutoCompleteBuscaLivre.Imovel, function (k, v) { if(opcao == k){ retorno = v; return false; } });
            if(retorno != undefined) return retorno;

            $.each(dadosAutoCompleteBuscaLivre.Bairro, function (k, v) { if(opcao == k){ retorno = v; return false; } });
            if(retorno != undefined) return retorno;

            $.each(dadosAutoCompleteBuscaLivre.Cidade, function (k, v) { if(opcao == k){ retorno = v; return false; } });
            if(retorno != undefined) return retorno;

            $.each(dadosAutoCompleteBuscaLivre.CondominioEmpreendimento, function (k, v) { if(opcao == k){ retorno = v; return false; } });

            return retorno;
    }();

    $('#form-busca-livre-3 input[type=hidden]:not(.hiddenTipoNegocio)').not('.hiddenTipoImovel').remove();
    
    if(resultado != undefined){

        ultimoTermoBuscaLivre1JS = opcao;

        $.each(resultado, function(k,v) {

            if(k == 'bairros')
                k = k + '[]';

            $('<input>').attr({
                type: 'hidden',
                name: k,
                value: v
            }).appendTo('#form-busca-livre-3');

        });

        if(resultado['codigo'] != undefined)
            $('#form-busca-livre-3').attr('data-disabled', 0).submit();
    }
}

function qtdResultadoBuscaLivre1()
{
    var dados         = $('#form-busca-livre-3').serialize();

    if(typeof(urlsBuscaLivre1) == 'function') {
        var url_qtd_busca = urlsBuscaLivre1().quantidade;

        if(getQueryByName('q', dados) == '') return;

        $.ajax({
            type: "POST",
            data: dados,
            url: url_qtd_busca
        })
        .success(function (data) {
            data = JSON.parse(data);

            if (data.retorno == 1) {
                $('#info-resultado-busca-livre-3').html('Foi encontrado ' + data.retorno + ' imóvel.').removeClass('hidden');
            } else if (data.retorno > 1) {
                $('#info-resultado-busca-livre-3').html('Foram encontrados ' + data.retorno + ' imóveis.').removeClass('hidden');
            } else {
                if(data.retorno == 0){
                    if($("#busca-livre-search").val().length < 3){
                        $('#info-resultado-busca-livre-3').html('Informe pelo menos 3 letras da localidade procurada');
                    }else{
                        $('#info-resultado-busca-livre-3').html('<div><i class="glyphicon glyphicon-alert"></i>&nbsp;&nbsp;<span>Não encontramos imóveis para essa localidade</span></div>').removeClass('hidden');
                        //$('#form-busca-livre-3').attr('data-disabled', 1);
                    }
                }
            }
        });
    }
}

$('#form-busca-livre-3 .seletor-venda:not(.hidden), #form-busca-livre-3 .seletor-aluguel:not(.hidden)')
    .find('input:checkbox')
    .prop('checked', true);

$('form#form-busca-livre-3').find('.btn-transacao').parent('div.transacao-group').next('.clear').find('input').on('change', function() {

    var obj       = null;
    var transacao = 'V';

    if($(this).parents('.seletor-aluguel').length > 0) {
        obj = $(this).parents('.seletor-aluguel').first();
        transacao = 'A';
    } else {
        obj = $(this).parents('.seletor-venda').first();
    }
});

function getBuscaLivreOptionsTipoImovel(arg){
    if(typeof(tipoNegocioBuscaLivre) != 'undefined') {
        if (tipoNegocioBuscaLivre !== undefined)
            return (tipoNegocioBuscaLivre[arg] !== undefined) ? tipoNegocioBuscaLivre[arg] : { "VA": {}, "VL": {}, "AA": {}, "AT": {} };
    }
    return {};
}

String.prototype.stripAccents = function() {
    var translate_re = /[àáâãäçèéêëìíîïñòóôõöùúûüýÿÀÁÂÃÄÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝ]/g;
    var translate = 'aaaaaceeeeiiiinooooouuuuyyAAAAACEEEEIIIINOOOOOUUUUY';
    return (this.replace(translate_re, function(match){
        return translate.substr(translate_re.source.indexOf(match)-1, 1); })
    );
};

function geraActionPersonalizadaBuscaLivre1(formId){

    var tipoNegocio             = 'V';
    var tipoNegocioSelecionado  = $('form#'+formId+' .btn-transacao.btn-ativo').attr('value');
    var inputHidden             = $('form#'+formId).find('.btn-transacao').parent('div.transacao-group').next('.clear').find((tipoNegocioSelecionado == 'A' ? '.seletor-aluguel' : '.seletor-venda') + ' input:checked');

    if(inputHidden.length == 1){
        tipoNegocio = inputHidden.val();
    } else {
        tipoNegocio = tipoNegocioSelecionado;
    }

    var tipoImovelSlug          = ($('form#'+formId+' .hiddenTipoImovel').data('slug') == undefined) ? '' : $('form#'+formId+' .hiddenTipoImovel').data('slug');
    var tipoImovel              = ($('form#'+formId+' .hiddenTipoImovel').val() == undefined) ? '' : $('form#'+formId+' .hiddenTipoImovel').val();
    var localizacaoSelecionada  = ($('#'+formId+' input[name=slug]').val() == undefined) ? '' : $('#'+formId+' input[name=slug]').val();
    var inputCodigoCondominio   = ($('#'+formId+' input[name=condominioEmpreendimento]').val() != undefined || $('#'+formId+' input[name=codigo]').val() != undefined) ? true  : false;

    var sufixoAction = '/' + getOptionsTipoNegocio(tipoNegocio);


    if ((tipoNegocio == 'AA' || tipoNegocio == "V") && (tipoImovelSlug != '' || tipoImovel.length == 0) && (!inputCodigoCondominio)) {
        sufixoAction = (tipoNegocio == 'AA') ? '/aluguel/' : '/venda/';
        if(tipoImovelSlug != '') sufixoAction += tipoImovelSlug + '/';
        if(localizacaoSelecionada != '') sufixoAction += localizacaoSelecionada + '/';
    }

    //console.log($('$'+formId+' #busca-detalhada-bairro').val());

    var action = $('#'+formId).data('action') + sufixoAction;
    //console.log('action: ' + action);

    var options = getBuscaLivreOptionsTipoImovel(tipoNegocio);
    var selecteds = $('#busca-livre-tipo-imovel option:selected');
    //console.log(selecteds);

    $.each(selecteds, function(k, v){
        if(options[$(this).val()] != undefined)
            action += options[$(this).val()].replace(/\,|\s|\//gi,'-').replace(/\-{2,}/gi,'-').replace(/\(|\)|¹|²|ª|º|\$/g,'').replace('´','').stripAccents().replace(/[^a-zA-Z0-9\ \-]*/gi, '').toLowerCase() + '-';
    });

    //console.log(action); //akiaki
    $('#'+formId).attr('action', action);
}
/**
 * Created by marcelo.junior on 09/12/2015.
 */

$('#form-busca-condominio-1').find('input[type=submit]').prop('disabled', true);

$('#form-busca-condominio-1').submit(function(){
    $('#busca-condominio-search').prop('disabled', true);
    return true;
});

var selectOptionBuscaCondominio      = false;
var selecaoAutomaticaFocusOut       = false;

if(typeof(urlsBuscaCondominio1) == 'function'){
    var emptyBuscaCondominioAutoComplete = false;
    var cacheBuscaCondominio1 = {};
    var cacheResultadoCondominio1 = {};
    $("#busca-condominio-search").catcomplete({
        delay: 20,
        minLength: 0,
        autoFocus: true,
        source:function (request, response ) {
            
            var term = request.term;
            var url_auto_complete_busca = urlsBuscaCondominio1().resultado;

            $('#form-busca-condominio-1 input[type=hidden]').remove();
            $('#info-resultado-busca-condominio-1').addClass('hidden');

            if(term in cacheBuscaCondominio1){
                if(term != '') {
                    response(cacheBuscaCondominio1[term]);
                    dadosAutoCompleteBuscaCondominio = cacheResultadoCondominio1[term];
                    $.ui.autocomplete.filter = function () {
                        return true
                    };
                    return;
                }
            }

            $.ajax({
                type: "POST",
                data: $('#form-busca-condominio-1').serialize() + '&tipoAutoComplete=cond',
                url: url_auto_complete_busca,
                success: function(data){
                    data                              = JSON.parse(data);
                    dadosAutoCompleteBuscaCondominio  = data;
                    cacheResultadoCondominio1[term]        = dadosAutoCompleteBuscaCondominio;

                    var i = 0;
                    var data_busca_livre = [];

                    $.each(data.CondominioEmpreendimento, function (k, v) { data_busca_livre[i] = {label: k, category: 'Condomínio/Empreendimento', empty: false}; i++; });


                    if (data_busca_livre.length == 0) {
                        console.log('Teste1');
                        data_busca_livre[0] = {label: urlsBuscaCondominio1().nenhumResultado, category: ''};
                    }else{
                        console.log('Teste2');
                        $('#form-busca-condominio-1').find('input[type=submit]').prop('disabled', false);
                    }

                    cacheBuscaCondominio1[term] = data_busca_livre;
                    response(data_busca_livre);

                }
            });
        },
        select: function (event, ui) {
            selectOptionBuscaCondominio = true;
            if(ui.item.category != '' && ui.item.label != 'Nenhum imóvel encontrado'){
                emptyBuscaCondominioAutoComplete = false;
                trataValoresBuscaCondominio1(ui.item.label);

                //qtdResultadoBuscaCondominio1();

                if (!selecaoAutomaticaFocusOut){
                    $('div#busca-por-condominio').find('form').trigger('submit');
                }
                selecaoAutomaticaFocusOut = false;

            }else{
                emptyBuscaCondominioAutoComplete = true;
            }
            qtdResultadoBuscaCondominio1();
        },
        close: function(event, ui) {
            if (emptyBuscaCondominioAutoComplete) $("#busca-condominio-search").val("");
            selectOptionBuscaCondominio = false;
        }
    }).click(function(){
        $(this).trigger(jQuery.Event("keydown", { keyCode: 40 }));
    }).keyup(function(e){
        //console.log($(this).val().length);
        /*if(e.keyCode != 13) { //ENTER
            qtdeVezesClienteTentouBuscarComLocalidadeInexistentePorMaisDeUmaVez = 0;
            $('#info-resultado-busca-livre-3').css('background', 'transparent');
        }*/

        /*if($(this).val() == '') {
            $("#info-resultado-busca-livre-3").addClass('hidden').html("");
        }else if($(this).val().length < 3){
            $('#info-resultado-busca-livre-3').html('Informe pelo menos 3 letras da localidade procurada');
        }*/
    });

    $("#form-busca-condominio-1 .btn-site").click(function(){
        console.log('clicou.');
        $("#busca-condominio-search").trigger(jQuery.Event("keydown", { keyCode: 40 })); //SETA PARA BAIXO
        $("#busca-condominio-search").trigger(jQuery.Event("keydown", { keyCode: 9 }));  //TAB
    });
}
function trataValoresBuscaCondominio1(opcao) {
    var resultado = function() {
        var retorno;
        $.each(dadosAutoCompleteBuscaCondominio.CondominioEmpreendimento, function (k, v) { if(opcao == k){ retorno = v; return false; } });
        return retorno;
    }();

    $('#form-busca-condominio-1 input[type=hidden]').remove();

    if(resultado != undefined){

        $.each(resultado, function(k,v) {
            $('<input>').attr({
                type: 'hidden',
                name: k,
                value: v
            }).appendTo('#form-busca-condominio-1');
        });
    }
}

function qtdResultadoBuscaCondominio1()
{
    var dados         = $('#form-busca-condominio-1').serialize();

    if(typeof(urlsBuscaCondominio1) == 'function') {
        var url_qtd_busca = urlsBuscaCondominio1().quantidade;

        if(getQueryByName('q', dados) == '')
            dados = '';

        $.ajax({
            type: "POST",
            data: dados,
            url: url_qtd_busca
        }).success(function (data) {
            data = JSON.parse(data);

            $('#form-busca-condominio-1').find('input[type=submit]').prop('disabled', false);

            if (data.retorno == 1) {
                $('#info-resultado-busca-condominio-1').html('Foi encontrado ' + data.retorno + ' imóvel.').removeClass('hidden');
            } else if (data.retorno > 1) {
                $('#info-resultado-busca-condominio-1').html('Foram encontrados ' + data.retorno + ' imóveis.').removeClass('hidden');
                $('#info-resultado-busca-condominio-1').removeClass('hidden');
            } else {
                /*if(data.retorno == 0)
                    $('#info-resultado-busca-condominio-1').html('Nenhum Imóvel foi encontrado').removeClass('hidden');
                $('#form-busca-condominio-1').find('input[type=submit]').prop('disabled', true);*/
            }
        });
    }
}
/**
 * Created by marcelo.junior on 10/12/2015.
 */
/**
 * Created by marcelo.junior on 09/12/2015.
 */

/*$('#form-busca-codigo-1').find('input[type=submit]').prop('disabled', true);

$('#form-busca-codigo-1').submit(function(){
    $('#busca-codigo-search').prop('disabled', true);
    return true;
});*/


var carregandoListaCodigo        = false;
var selectOptionBuscaCodigo      = false;
var emptyBuscaCodigoAutoComplete = true;

var qtdeVezesClienteTentouBuscarComCodigoInexistentePorMaisDeUmaVez = 0;

if(typeof(urlsBuscaCodigo1) == 'function'){

    var cacheBuscaCodigo1 = {};
    var cacheResultadoCodigo1 = {};

    $("#busca-codigo-search").catcomplete({
        autoFocus: true,
        delay: 300,
        //minLength: 3,
        source:function (request, response ) {
            carregandoListaCodigo = true;
            $('#busca-por-codigo .imoveis-encontrados')
                .removeClass('hidden')
                .html('<img src="/geral/img/procurando.svg" />&nbsp;Pesquisando');

            var term = request.term;
            var url_auto_complete_busca = urlsBuscaCodigo1().resultado;

            $('#form-busca-codigo-1 input[type=hidden]').remove();
            //$('#info-resultado-busca-codigo-1').addClass('hidden');

            if(term in cacheBuscaCodigo1){
                if(term != '') {
                    response(cacheBuscaCodigo1[term]);
                    dadosAutoCompleteBuscaCodigo = cacheResultadoCodigo1[term];
                    $.ui.autocomplete.filter = function (array) { return true };
                }
                if (cacheBuscaCodigo1[term].length == 0){
                    $('#busca-por-codigo .imoveis-encontrados')
                        .removeClass('hidden')
                        .html('<div><i class="glyphicon glyphicon-alert"></i>&nbsp;&nbsp;<span>Não encontramos nenhum imóvel com esse código</span></div>');
                }else{
                    carregandoListaCodigo = false;
                    $("#busca-por-codigo .imoveis-encontrados").addClass('hidden').html("");
                }
                return;
            }

            $.ajax({
                type: "POST",
                data: $('#form-busca-codigo-1').serialize() + '&tipoAutoComplete=codigo',
                url: url_auto_complete_busca,
                success: function(data){
                    data                          = JSON.parse(data);
                    dadosAutoCompleteBuscaCodigo  = data;
                    cacheResultadoCodigo1[term]   = dadosAutoCompleteBuscaCodigo;

                    var i = 0;
                    var data_busca_livre = [];

                    $.each(data.Imovel, function (k, v) { data_busca_livre[i] = {label: k, category: 'Imóvel'};     i++; });

                    cacheBuscaCodigo1[term] = data_busca_livre;
                    response(data_busca_livre);
                    if (data_busca_livre.length == 0){
                        $('#busca-por-codigo .imoveis-encontrados')
                            .removeClass('hidden')
                            .html('<div><i class="glyphicon glyphicon-alert"></i>&nbsp;&nbsp;<span>Não encontramos nenhum imóvel com esse código</span></div>');
                    }else{
                        carregandoListaCodigo = false;
                        $("#busca-por-codigo .imoveis-encontrados").addClass('hidden').html("");
                    }
                }
            });
        },
        select: function (event, ui) {
            selectOptionBuscaCodigo = true;

            if(ui.item.category != ''){
                emptyBuscaCodigoAutoComplete = false;
                trataValoresBuscaCodigo1(ui.item.label);
                $('#busca-por-codigo input.btn-site').attr('disabled','disabled');
                $(event.target).parents('form').first().submit();
                //qtdResultadoBuscaCodigo1();
            }else{
                emptyBuscaCodigoAutoComplete = true;
            }
        },
        close: function(event, ui) {
            //if (emptyBuscaCodigoAutoComplete) $("#busca-codigo-search").val("");
            selectOptionBuscaCodigo = false;
        }
    }).click(function(){
        //$(this).trigger(jQuery.Event("keydown", { keyCode: 40 }));
        $(this).trigger("keydown");
    }).keyup(function(e){
        //console.log($(this).val().length);
        if(e.keyCode != 13) {
            qtdeVezesClienteTentouBuscarComCodigoInexistentePorMaisDeUmaVez = 0;
            $('div#form-busca-codigo-1 div.imoveis-encontrados').css('background', 'transparent');
        }

        if($(this).val() == '') {
            $("div#form-busca-codigo-1 div.imoveis-encontrados").addClass('hidden').html("");
            /*}else if($(this).val().length < 3){
                $('div#form-busca-codigo-1 div.imoveis-encontrados').html('Informe pelo menos 3 letras da localidade procurada');*/
        }
    });

    $("#busca-por-codigo .btn-site").click(function(){
        $("#busca-codigo-search").trigger(jQuery.Event("keydown", { keyCode: 40 }));
        //$("#busca-livre-search").trigger("keydown");
        $("#busca-codigo-search").trigger(jQuery.Event("keydown", { keyCode: 9 }));
    });
}

$('div#busca-por-codigo').find('form').on('submit', function(e){
    console.log('Teste');
    $('#busca-por-codigo .imoveis-encontrados')
        .removeClass('hidden')
        .html('<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>&nbsp;Carregando');
});

function trataValoresBuscaCodigo1(opcao) {
    var resultado = function() {
        var retorno;
        $.each(dadosAutoCompleteBuscaCodigo.Imovel, function (k, v) { if(opcao == k){ retorno = v; return false; } });
        return retorno;
    }();

    $('#form-busca-codigo-1 input[type=hidden]').remove();

    if(resultado != undefined){

        $.each(resultado, function(k,v) {
            $('<input>').attr({
                type: 'hidden',
                name: k,
                value: v
            }).appendTo('#form-busca-codigo-1');
        });
    }
}
$('#form-busca-lancamentos-1').find('select[name=cidadesEmp]').on('change', function() {
    var bairros       = _dadosCidadeBairroBuscaLancamento[$(this).val()] || {};
    var selectBairros = $('#form-busca-lancamentos-1').find('select.combo-bairros-busca-lancamento.multiple-select');

    selectBairros.find('option').remove();
    $.each(bairros.bairro, function(k, v) {
        selectBairros.append('<option value="' + k + '">' + v + '</option>');
    });
    selectBairros.multiselect('rebuild');
});
/**
 * Created by marcelo.junior on 22/12/2015.
 */

var $_cacheTransacaoBuscaDetalhada = {};

$("select.select-seguro-fianca").on('change', function() {
    var that        = $(this);
    var transacao   = $(that).val();
    var lopcoes     = {'V': 'venda', 'A': 'aluguel', 'F': 'seguro-fianca'};
    var form        = $(that).parents('.tab-pane')[0];
    $(form).find('div[class^="seletor-"]').addClass('hidden').find(':input').prop('disabled', true);
    $(form).find('div.seletor-' + lopcoes[transacao]).removeClass('hidden').find(':input').prop('disabled', false).prop('checked',true);

    var obj = null;
    if(transacao == 'V') {
        obj = $(form).find('.seletor-venda').first();
        transacao = 'V';
    } else {
        obj = $(form).find('.seletor-aluguel').first();
        transacao = 'A';
    }
    _preparaDadosBuscaCompleta(obj, transacao, $(form).find('form').first());
}).change();


$('label.btn-comprar, label.btn-alugar').click(function(e) {

    $(this).parent().find('label.btn-comprar.btn-ativo, label.btn-alugar.btn-ativo').each(function(i){
        $(this).removeClass('btn-ativo');
    });

    $(this).addClass('btn-ativo');

    var formulario      = $(this).parents('form').first();
    var formularioLivre = formulario.attr('id') != undefined && formulario.attr('id').indexOf('form-busca-livre-3') != -1;

    var comboBoxVenda = $(this).parent('.transacao-group').next('.clear').children('.seletor-venda');
    var comboBoxAluguel = $(this).parent('.transacao-group').next('.clear').children('.seletor-aluguel');

    var transacao = 'V';

    if (!$(this).hasClass('btn-comprar')) {
        $(this).prev('.btn-transacao').first().removeClass('btn-ativo');
        comboBoxAluguel.removeClass('hidden');
        comboBoxVenda.addClass('hidden');
        comboBoxAluguel.find('input').prop('disabled', false);
        comboBoxVenda.find('input').prop('disabled', 'disabled');
        transacao = 'A';
    } else {
        $(this).next('.btn-transacao').first().removeClass('btn-ativo');
        comboBoxVenda.removeClass('hidden');
        comboBoxAluguel.addClass('hidden');
        comboBoxVenda.find('input').prop('disabled', false);
        if(!formularioLivre || !e.isTrigger) comboBoxVenda.find('input').prop('checked', true);
        comboBoxAluguel.find('input').prop('disabled', 'disabled');
    }

    if(!formularioLivre){

        var divDataTipoNegocio = $(this).parent('div.transacao-group').next('.clear').children(transacao == 'V' ? '.seletor-venda' : '.seletor-aluguel');

        if($('.busca-avancada').find(this).length > 0){
            if(transacao == 'V'){
                $('.busca-avancada').find('.outras-options-alugar').addClass('hidden');
                $('.busca-avancada').find('.outras-options-alugar :checkbox').prop('disabled', true);
                $('.busca-avancada').find('.outras-options-comprar :checkbox').prop('disabled', false);
                $('.busca-avancada').find('.outras-options-comprar').removeClass('hidden');
            }else{
                $('.busca-avancada').find('.outras-options-alugar').removeClass('hidden');
                $('.busca-avancada').find('.outras-options-alugar :checkbox').prop('disabled', false);
                $('.busca-avancada').find('.outras-options-comprar :checkbox').prop('disabled', true);
                $('.busca-avancada').find('.outras-options-comprar').addClass('hidden');
            }
        } else {
           _preparaDadosBuscaCompleta(divDataTipoNegocio, transacao, formulario);
        }
    }
});

$('#busca-detalhada form').find('.btn-transacao').parent('div.transacao-group').next('.clear').find('input').on('change', function() {

    var obj       = null;
    var transacao = 'V';

    if($(this).parents('.seletor-aluguel').length > 0) {
        obj = $(this).parents('.seletor-aluguel').first();
        transacao = 'A';
    } else {
        obj = $(this).parents('.seletor-venda').first();
    }

    _preparaDadosBuscaCompleta(obj, transacao, $('#busca-detalhada form'));
});

var sliders = document.getElementsByClassName('sliders');

if(sliders.length > 0){
    [].forEach.call(sliders, function(slider) {
        _buildNoUiSlider(slider, false);
    });
}
$('#form-busca-detalhada-3 .transacao-group label.btn-ativo').click();
$(document).ready(function(){
    //DESTAQUE 6
    var maxDestaque1Height = 0;
    $("#destaque .destaque-imovel-info").each(function(k, v){
        if($(v).height() > maxDestaque1Height) maxDestaque1Height = $(v).height();
    });
    $("#destaque  .destaque-imovel-info").each(function(k, v){
        var paddingTop = $(v).css('padding-top');
        var paddingBottom = $(v).css('padding-bottom');
        $(v).css('height', parseInt(paddingTop) + parseInt(maxDestaque1Height) + parseInt(paddingBottom) + 10);
    });

    function msieversion() {
        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");
        return (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./));
    }

    if(msieversion()) {
        $("#destaque.proporcional img.img-responsive").each(function (k, v) {
            var height  = $(v).get(0).naturalHeight;
            var width   = $(v).get(0).naturalWidth;
            var prop    = (width / height);

            //console.log($(v).width() + '--' + $(v).get(0).naturalWidth);

            console.log('hack-ie:'+width+'/'+height);
            if(prop > 1) { //horizontal 
                $(v).css('height', 'auto');
            } else { // vertical
                $(v).css('width', 'auto');
            }
        });
    }
    var $carousel = $('.flicky').flickity({
         //options
        fullscreen: false,
        lazyLoad: 1,
        pageDots: false,
        wrapAround: true,
        imagesLoaded: true
        });
    $carousel.on( 'staticClick.flickity', function() {
        var url = $(this).data("options");
        window.open(url,"_self");
        //console.log(url);
    });
    /*Galeria */

    // $('.carousel').flickity({
    //     // options
    //     fullscreen: true,
    //     lazyLoad: 1,
    //     pageDots: false
    // });
    //
    // $('.carousel-cell-image').on('click',function(){
    //     $('.carousel').flickity('viewFullscreen');
    // });


    /*$(".destaque-favorito .glyphicon").on('mouseenter mouseleave', function(event){
        switchClass($(this), "glyphicon-star-empty", "glyphicon-star");
    });*/
});
/**
 * Created by fabio on 05/01/2016.
 */
    
var maxLancamento1Height = 0;
$("#destaque-lancamento .destaque-imovel").each(function(k,v){
	 try {
        var img = $(v).find('img').eq(0);
        if(img.length == 1){
            var imgfake = new Image(); imgfake.src = $(img).attr('src');
            imgfake.onload = function() {
                var classeVertical = ( (parseInt(imgfake.width) / parseInt(imgfake.height)) >= 1) ? 'img-horizontal' : 'img-vertical';
                $(v).find('picture').parent().addClass(classeVertical);
            };
        }

    }catch(err){console.log(err);}
    if($(v).height() > maxLancamento1Height) maxLancamento1Height = $(v).height() + 28;
});

$("#destaque-lancamento .destaque-imovel").each(function(k,v){
    $(v).css('height', parseInt(maxLancamento1Height));
});
/*
$('#carouselLancamento').carousel({
    interval: 10000,
    pause: 'true'
});

*/
// Instantiate the Bootstrap carousel
var intervalDepoimento = ($('.multi-item-carousel').data('interval') == true) ? 7000 : false;
$('.multi-item-carousel').carousel({
    interval: intervalDepoimento,
    pause: "hover"
});



var maxDepoimentoHeight = 0;
$("#carouselDepoimento .item").each(function(){
    $(this).children('div').each(function(k,v){
        if($(v).height() > maxDepoimentoHeight) maxDepoimentoHeight = $(v).height();
    });
});

$("#carouselDepoimento .item > div").each(function(k,v){
    $(v).css('height', parseInt(maxDepoimentoHeight));
});

$('.widget-depoimento').css('height', parseInt(maxDepoimentoHeight));

/*(function(d, s, id) {
    var langUsage = {pt:'pt_BR', en: 'en_US', es:'es_ES', fr:'fr_FR', it:'it_IT', nl:'nl_NL', pl:'pl_PL', de:'de_DE'};
    var fbsdk = d.getElementsByClassName('fb-page')[0];

    if(fbsdk != undefined){
        var lang = "pt_BR";
        try {
            if (fbsdk.dataset.lang != undefined && fbsdk.dataset.lang)
            lang = langUsage[fbsdk.dataset.lang];
        } catch(err) {}

        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id; js.async=true;
        js.src = "//connect.facebook.net/"+lang+"/sdk.js#xfbml=1&version=v2.5";
        fjs.parentNode.insertBefore(js, fjs);
    }

}(document, 'script', 'facebook-jssdk'));*/
/**
 * Created by marcelo.junior on 24/11/2015.
 */
//!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
$("#btn-tipo-negocio li a").on('click', function() {
	var target = $(this).data('target');
    if($(".mais-buscados li[rel='cond'][class='active']:visible").length > 0){
        $("[data-target='"+target+"-cond']").click();
    } else {
        $("[data-target='"+target+"-local']").click();
    }

});

if($("#btn-tipo-negocio li.active").length == 0){
    $("#btn-tipo-negocio li:eq(0) a").click();
}
/**
 * Created by marcelo.junior on 19/11/2015.
 */


$('#formulario-newsletter').on('submit', function(e){

    var dados = $(this).serialize();
    var postNewsletterUrl = $(this).attr('action');

    $(this).find('input').not('input[type=submit]').prop('disabled', true);

    $.ajax({
        method:'POST',
        url: postNewsletterUrl,
        data: dados,
        async:false
    }).done(function(response){
        response = JSON.parse(response);
        alert(response.message);
    });

    $(this).find('input').not('input[type=submit]').prop('disabled', false);
    $(this).find('input').not('input[type=submit]').val('');

    return false;
});

/**
 * Created by marcelo.junior on 21/03/2016.
 */

$(document).ready(function(){
    $('div.widget-pop-up').each(function(){
        if (!($(this).hasClass('hidden-xs') && window.innerWidth < 576)){
            var im = $('div.widget-pop-up').find('[lazy-src]').eq(0);
            $(im).attr('src', $(im).attr('lazy-src')).removeAttr('lazy-src').attr('lazied', 'lazied-src');

            $(this).modal('show');

            $(this).on('shown.bs.modal', function(){
                var modal = $(this);
                modal.find('img:first').on('load', function(){
                    var tamanhoImagem = $(this).width() + 30;
                    modal.children('.modal-dialog:first').css('width', tamanhoImagem + 'px');
                })
            });
        }
    });
});

/*$("#abre-filial-fixa").on('click', function() {
    var target = $(this).data('target');
    $(target).addClass('open');
});*/
if($(".filial.filial-imovel").length != 0) {
    console.log('oi');
    var filialImovel = $(".filial.filial-imovel").clone();
    $(".filial.filial-imovel").remove();
    $(".barra-fixa-fancy").prepend(filialImovel);
}
  });